# {{ ansible_managed }}

{% if nginx_group is defined %}
user {{ nginx_user }} {{ nginx_group }};
{% else %}
user {{ nginx_user }};
{% endif %}

error_log  {{ nginx_error_log }};
pid        {{ nginx_pid_file }};

worker_processes  {{ nginx_worker_processes }};
{% if nginx_worker_rlimit_nofile is defined %}
worker_rlimit_nofile {{ nginx_worker_rlimit_nofile }};
{% endif %}

events {
{% if nginx_accept_mutex is defined %}
accept_mutex {{ nginx_accept_mutex }};
{% endif %}
    multi_accept {{ nginx_multi_accept }};
    worker_connections  {{ nginx_worker_connections }};
{% if nginx_use is defined %}
use {{ nginx_use }};
{% endif %}
}

{% if nginx_extra_conf_options %}
{{ nginx_extra_conf_options }}
{% endif %}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    server_names_hash_bucket_size 64;
    reset_timedout_connection on;

    client_max_body_size {{ nginx_client_max_body_size }};

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  {{ nginx_access_log }};
    server_tokens {{ nginx_server_tokens }};

    sendfile        {{ nginx_sendfile }};
    tcp_nopush      {{ nginx_tcp_nopush }};
    tcp_nodelay     {{ nginx_tcp_nodelay }};

    keepalive_timeout  {{ nginx_keepalive_timeout }};
    keepalive_requests {{ nginx_keepalive_requests }};

    gzip {{ nginx_gzip }};
    gzip_min_length {{ nginx_gzip_min_length }};
    gzip_comp_level {{ nginx_gzip_comp_level }};

    open_file_cache {{ nginx_open_file_cache }};

{% if nginx_proxy_cache_path %}
    proxy_cache_path {{ nginx_proxy_cache_path }};
{% endif %}

{% if nginx_extra_http_options %}
    {{ nginx_extra_http_options }}
{% endif %}

{% for upstream in nginx_upstreams %}
    upstream {{ upstream.name }} {
{% if upstream.strategy is defined %}
        {{ upstream.strategy }};
{% endif %}
{% for server in upstream.servers %}
        server {{ server }};
{% endfor %}
    }
{% endfor %}

    include {{ nginx_conf_path }}/*.conf;
{% if nginx_conf_path != nginx_vhost_path %}
    include {{ nginx_vhost_path }}/*;
{% endif %}
}
